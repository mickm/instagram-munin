#!/bin/bash
#
# munin plugin to graph instagram api quota usage
#
# e.g.
#
# [instagram_api_ratelimit_account1]
# env.client_id acc0unt1
# env.client_secret acc0unt1secr3t
# env.remaining_warning 1000:
# env.remaining_critical 500:

. $MUNIN_LIBDIR/plugins/plugin.sh

[ -n "$client_id" ] && [ -n "$client_secret" ] || {
  echo "Need client_id and client_secret."
  exit 1
}

[ -z "$endpoint" ] && endpoint="https://api.instagram.com/v1/subscriptions"
[ -z "$account_name" ] && account_name=${0##*/instagram_api_ratelimit_}

fetch() {
  curl -Lvs "$endpoint?client_id=$client_id&client_secret=$client_secret" 2>&1
}

parse() {
  awk '/^< X-Ratelimit-Limit: [0-9]+\s*$/ {limit=$3};         \
       /^< X-Ratelimit-Remaining: [0-9]+\s*$/ {remaining=$3}; \
       END {printf "%d %d\n", limit, remaining}'
}

read limit remaining <<<$(fetch | parse)

if [ "$1" = "config" ]; then
  [ -n "$host_name" ] && echo "host_name $host_name"
  echo "graph_title $account_name - Instagram API ratelimit"
  echo "graph_order used remaining"
  echo "graph_args --base 1000 -r --lower-limit 0 --upper-limit $limit"
  echo "graph_vlabel Requests"
  echo "graph_scale no"
  echo "graph_info This graph shows Instagram API quota usage."
  echo "graph_category instagram"
  echo "graph_period second"
  echo "used.label used"
  echo "used.draw AREA"
  echo "used.min 0"
  echo "used.type GAUGE"
  echo "used.info Requests used"
  echo "remaining.label remaining"
  echo "remaining.draw STACK"
  echo "remaining.min 0"
  echo "remaining.type GAUGE"
  echo "remaining.info Requests remaining"
  print_warning used
  print_critical used
  print_warning remaining
  print_critical remaining
  exit 0
fi

echo "used.value $((limit-remaining))"
echo "remaining.value $remaining"
